#!/bin/bash

# parameters - service username password
# GPG encryption

# ENCRYPT: 
#gpg -e -r "$catkey" "$db"
# remove the other file

# DECRYPT:
# gpg -d $db | tail -n +3 file.txt | awk '{print $1}' | sort | dmenu -i -p "Bashpass"

# IF THE GPG KEY WAS MISWRITTEN DELETE THE .bashpass/key FILE AND RERUN THE SCRIPT
# --trust-model always

trap 'enc;exit' 0 1 2 3 15 19
dbdir="$HOME/.bashpass"
db="$dbdir/db"
dbenc="$dbdir/db.gpg"

enc() {
	# ENCRYPT
	gpg -e --trust-model always -r "$catkey" "$db"
	rm "$db"
}

dec() {
	# DECRYPT
	gpg -o "$db" -d "$dbenc"
	rm "$dbenc"
}


add() {
	if [ ! -f "$dbenc" ]
	then
		enc
	fi
	service=$(printf "" | dmenu -p "Service:")
	case $service in
	"")
	notify-send "Error: invalid service" "Click to dismiss."
	exit
	;;
	esac

	if grep -wq "$service" "$db"
	then
		notify-send "Error: Service name used" "Click to dismiss."
		exit
	fi

	username=$(printf "" | dmenu -p "Username:")
	case $username in
	"")
	notify-send "Error: invalid username" "Click to dismiss."
	exit
	;;
	esac

	pass=$(printf "" | dmenu -p "Password:")
	case $pass in
	"")
	notify-send "Error: invalid password" "Click to dismiss."
	exit
	;;
	esac

	dec

	printf '%s %s %s\n' "$service" "$username" "$pass" >> "$db"

	exit
}

edit() {
	dec
	xdg-open "$db"
}


get() {
	dec
	servtrg=$(cat "$db" | awk '{print $1}' | sort | dmenu -i -p "Bashpass")
	if [ $servtrg != "" ]; then
		uspassmenu=$(printf "Username\nPassword" | dmenu -i -p "Bashpass")
		case $uspassmenu in
		"Username")
		grep -w "$servtrg" "$db" | awk '{print $2}' | xclip -selection clipboard
		notify-send "ðŸ’» $servtrg's username copied to the clipboard." "Click to dismiss."
		;;
		"Password")
		grep -w "$servtrg" "$db" | awk '{print $3}' | xclip -selection clipboard
		notify-send "ðŸ’» $servtrg's password copied to the clipboard." "Click to dismiss."
		;;
		*)
		exit
		;;
		esac
	fi
}


if [[ ! -d "$dbdir"  ]]; then
	mkdir "$dbdir"
	touch "$db"
fi

key="$dbdir/key"

if [[ ! -f "$key" ]] || [ ! -s "$key" ]
then
	touch "$key"
	gpgmenu=$(printf "" | dmenu -p "GPG key:")

	case $gpgmenu in
	"")
	notify-send "Error: invalid GPG key" "Click to dismiss."
	rm -rf "$dbdir/"
	exit
	;;
	esac

	printf "$gpgmenu" > "$key"

fi

catkey=`cat $key`

if [[ -f "$db" && ! -f "$dbend" ]]
then
	enc
fi

menu=$(printf "Add\nGet\nEdit" | dmenu -i -p "Bashpass")

case $menu in
"Add")
add ;;
"Get")
get ;;
"Edit")
edit ;;
*)
exit
;;
esac
